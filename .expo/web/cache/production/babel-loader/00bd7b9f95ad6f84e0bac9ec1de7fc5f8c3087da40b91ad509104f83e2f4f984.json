{"ast":null,"code":"import{useState}from\"react\";import React from\"react\";import styled from\"styled-components\";import{useDispatch}from\"react-redux\";import PropTypes from'prop-types';import{AddTodoAction}from\"../redux/actions/TodoActions\";import{storiesOf}from'@storybook/react';import{actions}from'@storybook/addon-actions';const StyledModal=styled.div`\nheight: 100vh;\nwidth: 100vw;\nbackground-color: rgba(0,0,0,0.4);\nposition: fixed;\ntop: 0;\nleft: 0;\ncolor:black;\ndisplay:flex;\nalign-items:center;\njustify-content:center;\ntransform:scale(1);\n\n`;const ModalContent=styled.div`\npadding: 20px;\nborder-radius:12px;\nbackground-color:white;\nheigth: 200px;\nwidth:500px;\n`;const InputBlock=styled.div`\nmargin-bottom: 15px;\nmargin-top:15px;\n`;const ButtonsBlock=styled.div`\ndisplay:flex;\nalign-items:center;\njustify-content:flex-end;\n`;const Modal=({active,setActive,addTask,updateData})=>{// const [userInput,setUserInput] = useState('')\nconst[todo,setTodo]=useState();const dispatch=useDispatch();// const Todo = useSelector((state) => state.Todo);\n// const { todos } = Todo;\n// const handleChange = (e) => {\n//     setUserInput(e.currentTarget.value)\n// }\nconst handleSubmit=e=>{e.preventDefault();// addTask(userInput)\ndispatch(AddTodoAction(todo));setActive(false);};const handleKeyPress=e=>{if(e.key===\"Enter\"){handleSubmit(e);}};return/*#__PURE__*/React.createElement(StyledModal,{style:{transform:active?'scale(1)':'scale(0)'}},/*#__PURE__*/React.createElement(ModalContent,null,/*#__PURE__*/React.createElement(InputBlock,null,/*#__PURE__*/React.createElement(\"form\",{onSubmit:handleSubmit},/*#__PURE__*/React.createElement(\"h1\",null,\"\\u0424\\u043E\\u0440\\u043C\\u0430\"),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",className:\"form-control mb-30\",placeholder:\"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0435\",\"aria-label\":\"Username\",\"aria-describedby\":\"basic-addon1\"// value={userInput}\n,onChange:e=>setTodo(e.target.value),onKeyDown:handleKeyPress}))),/*#__PURE__*/React.createElement(ButtonsBlock,null,/*#__PURE__*/React.createElement(\"button\",{type:\"submit\",class:\"btn btn-primary\",onClick:handleSubmit},\"\\u041E\\u043A\"),/*#__PURE__*/React.createElement(\"button\",{type:\"button\",class:\"btn btn-light\",onClick:()=>setActive(false)},\"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0430\"))));};Modal.propTypes={// active: PropTypes.bool,\nhandleSubmit:PropTypes.func,setActive:PropTypes.func,onClick:PropTypes.func};export default Modal;","map":{"version":3,"names":["useState","React","styled","useDispatch","PropTypes","AddTodoAction","storiesOf","actions","StyledModal","div","ModalContent","InputBlock","ButtonsBlock","Modal","active","setActive","addTask","updateData","todo","setTodo","dispatch","handleSubmit","e","preventDefault","handleKeyPress","key","createElement","style","transform","onSubmit","type","className","placeholder","onChange","target","value","onKeyDown","class","onClick","propTypes","func"],"sources":["C:/react-redux/src/components/Modal.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport PropTypes from 'prop-types'\r\nimport { AddTodoAction } from \"../redux/actions/TodoActions\";\r\nimport { storiesOf } from '@storybook/react';\r\nimport { actions } from '@storybook/addon-actions';\r\n\r\n\r\nconst StyledModal = styled.div `\r\nheight: 100vh;\r\nwidth: 100vw;\r\nbackground-color: rgba(0,0,0,0.4);\r\nposition: fixed;\r\ntop: 0;\r\nleft: 0;\r\ncolor:black;\r\ndisplay:flex;\r\nalign-items:center;\r\njustify-content:center;\r\ntransform:scale(1);\r\n\r\n`\r\n\r\nconst ModalContent = styled.div `\r\npadding: 20px;\r\nborder-radius:12px;\r\nbackground-color:white;\r\nheigth: 200px;\r\nwidth:500px;\r\n`\r\nconst InputBlock = styled.div `\r\nmargin-bottom: 15px;\r\nmargin-top:15px;\r\n`\r\nconst ButtonsBlock = styled.div `\r\ndisplay:flex;\r\nalign-items:center;\r\njustify-content:flex-end;\r\n`\r\n\r\nconst Modal = ({active, setActive,addTask,updateData}) => {\r\n    // const [userInput,setUserInput] = useState('')\r\n\r\n    const [todo,setTodo] = useState();\r\n    const dispatch = useDispatch();\r\n    // const Todo = useSelector((state) => state.Todo);\r\n    // const { todos } = Todo;\r\n\r\n\r\n\r\n    // const handleChange = (e) => {\r\n    //     setUserInput(e.currentTarget.value)\r\n    // }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        // addTask(userInput)\r\n        dispatch(AddTodoAction(todo))\r\n        setActive(false)\r\n    }\r\n\r\n    const handleKeyPress = (e) => {\r\n        if(e.key === \"Enter\") {\r\n            handleSubmit(e)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <StyledModal style={{transform: active ? 'scale(1)' : 'scale(0)' }}>\r\n            <ModalContent  >\r\n                <InputBlock>\r\n                <form onSubmit={handleSubmit}>\r\n                <h1>Форма</h1>\r\n                <input type=\"text\" className=\"form-control mb-30\" placeholder=\"Введите данные\" aria-label=\"Username\" aria-describedby=\"basic-addon1\"\r\n                // value={userInput}\r\n                onChange={(e) => setTodo(e.target.value)}  \r\n                onKeyDown={handleKeyPress}\r\n                />\r\n                </form>\r\n                </InputBlock>\r\n                \r\n            <ButtonsBlock>\r\n                <button type=\"submit\" class=\"btn btn-primary\" onClick={handleSubmit}>Ок</button>\r\n                <button type=\"button\" class=\"btn btn-light\" onClick={() => setActive(false)} >Отмена</button>\r\n            </ButtonsBlock>\r\n            </ModalContent>\r\n        </StyledModal>\r\n\r\n\r\n        \r\n    );\r\n};\r\n\r\nModal.propTypes = {\r\n    // active: PropTypes.bool,\r\n    handleSubmit: PropTypes.func,\r\n    setActive: PropTypes.func,\r\n    onClick: PropTypes.func\r\n}\r\n\r\nexport default Modal;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}